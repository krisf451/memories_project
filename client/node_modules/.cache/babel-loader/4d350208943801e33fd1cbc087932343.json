{"ast":null,"code":"var _jsxFileName = \"/Users/justinfulkerson/Desktop/My_Projects/memories_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  // const posts = useSelector(state =>\n  //   currentId ? state.posts.find(p => p._id === currentId) : null\n  // );\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    }\n\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Creating a Memory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          fullWidth: true,\n          value: postData.creator,\n          onChange: e => setPostData({ ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => setPostData({ ...postData,\n              selectedFile: base64\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"z3T9g7PrMouKHbDsfkbrTyvcuAI=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/justinfulkerson/Desktop/My_Projects/memories_project/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nexport const Form = ({ currentId, setCurrentId }) => {\n  // const posts = useSelector(state =>\n  //   currentId ? state.posts.find(p => p._id === currentId) : null\n  // );\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    }\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={handleSubmit}\n        >\n          <Typography variant=\"h6\">Creating a Memory</Typography>\n          <TextField\n            name=\"creator\"\n            variant=\"outlined\"\n            label=\"Creator\"\n            fullWidth\n            value={postData.creator}\n            onChange={e =>\n              setPostData({ ...postData, creator: e.target.value })\n            }\n          />\n          <TextField\n            name=\"title\"\n            variant=\"outlined\"\n            label=\"Title\"\n            fullWidth\n            value={postData.title}\n            onChange={e => setPostData({ ...postData, title: e.target.value })}\n          />\n          <TextField\n            name=\"message\"\n            variant=\"outlined\"\n            label=\"Message\"\n            fullWidth\n            value={postData.message}\n            onChange={e =>\n              setPostData({ ...postData, message: e.target.value })\n            }\n          />\n          <TextField\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags\"\n            fullWidth\n            value={postData.tags}\n            onChange={e => setPostData({ ...postData, tags: e.target.value })}\n          />\n          <div className={classes.fileInput}>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setPostData({ ...postData, selectedFile: base64 })\n              }\n            />\n          </div>\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={clear}\n            fullWidth\n          >\n            Clear\n          </Button>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}